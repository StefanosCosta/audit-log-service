// Code generated by MockGen. DO NOT EDIT.
// Source: config/config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthConfiger is a mock of AuthConfiger interface.
type MockAuthConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockAuthConfigerMockRecorder
}

// MockAuthConfigerMockRecorder is the mock recorder for MockAuthConfiger.
type MockAuthConfigerMockRecorder struct {
	mock *MockAuthConfiger
}

// NewMockAuthConfiger creates a new mock instance.
func NewMockAuthConfiger(ctrl *gomock.Controller) *MockAuthConfiger {
	mock := &MockAuthConfiger{ctrl: ctrl}
	mock.recorder = &MockAuthConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthConfiger) EXPECT() *MockAuthConfigerMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockAuthConfiger) GenerateToken(id uint) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockAuthConfigerMockRecorder) GenerateToken(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockAuthConfiger)(nil).GenerateToken), id)
}

// Validate mocks base method.
func (m *MockAuthConfiger) Validate(token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockAuthConfigerMockRecorder) Validate(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockAuthConfiger)(nil).Validate), token)
}
